files = { 
    'data_-10.txt', 'data_-15.txt', 'data_-20.txt', 'data_-25.txt', 'data_-30.txt',...
    'data_-35.txt', 'data_-40.txt', 'data_-45.txt', 'data_-50.txt'
};

U_rev = [-0.65, -1.01, -1.37, -1.71, -2.08, -2.44, -2.79, -3.15, -3.49];

omega_steady_rads = zeros(size(files));
options = optimset('Display', 'off');

for i = 1:length(files)
    data = load(files{i});
    time_unix = data(:, 1);       
    time = time_unix - time_unix(1); 
    omega_deg = data(:, 3);       % Скорость в градусах/с 
    omega_rad = omega_deg * (pi/180); % В радианы/с
    
    % Проверка постоянства скорости (замена range())
    if (max(omega_rad) - min(omega_rad)) < 0.01
        omega_steady_rads(i) = mean(omega_rad);
        fprintf('Файл %s: скорость постоянна, ω_уст = %.4f рад/с\n', files{i}, omega_steady_rads(i));
        continue;
    end
    
    
    par0 = [0.1, 0.06]; 
    
    % Аппроксимирующая функция
    fun_omega = @(par, t) par(1) * (1 - exp(-t/par(2)));
    
    
    par_omega = lsqcurvefit(fun_omega, par0, time, omega_rad, [], [], options);
    omega_steady_rads(i) = par_omega(1);
    
    % Визуализация аппроксимации
    figure;
    plot(time, omega_rad, 'b.', 'DisplayName', 'Данные');
    hold on;
    plot(time, fun_omega(par_omega, time), 'r-', 'LineWidth', 1.5, 'DisplayName', 'Аппроксимация');
    xlabel('Время, с');
    ylabel('\omega, рад/с');
    title(sprintf('Файл: %s, U = %.2f В', files{i}, U_rev(i)));
    legend;
    grid on;
end

% Построение U(ω)
figure;
plot(omega_steady_rads, U_rev, 'bo', 'MarkerFaceColor', 'b', 'DisplayName', 'Данные');
xlabel('\omega_{уст}, рад/с');
ylabel('U, В');
title('Зависимость U от \omega_{уст}');
grid on;

% Линейная аппроксимация
p = polyfit(omega_steady_rads, U_rev, 1);
ke = p(1);
U_fit = polyval(p, omega_steady_rads);

hold on;
plot(omega_steady_rads, U_fit, 'r-', 'DisplayName', sprintf('U = %.4f·ω', ke));
legend;

fprintf('Коэффициент ke = %.4f);
